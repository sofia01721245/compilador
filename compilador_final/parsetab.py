
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN_SIGN COLON COMMA CTE_FLOAT CTE_INT CTE_STRING EQUAL GREATER GREATER_EQUAL ID KEYWORD_DO KEYWORD_ELSE KEYWORD_END KEYWORD_FLOAT KEYWORD_IF KEYWORD_INT KEYWORD_MAIN KEYWORD_PRINT KEYWORD_PROGRAM KEYWORD_STRING KEYWORD_VAR KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LESS LESS_EQUAL LPAREN NOT_EQUAL OP_DIV OP_MUL OP_SUB OP_SUM RBRACE RBRACKET RPAREN SEMICOLONPrograma : KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN body KEYWORD_END SEMICOLONvars_opt : vars_opt VARS\n| VARS\n| emptyVARS : KEYWORD_VAR var_list SEMICOLONvar_list : ID id_list COLON typeid_list : COMMA ID id_list\n| emptytype : KEYWORD_INT\n| KEYWORD_FLOAT\n| KEYWORD_STRINGfuncs_opt : FUNCS\n| emptyFUNCS : KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLONparametros_opt : parametros\n| emptyparametros : ID COLON type param_listparam_list : COMMA ID COLON type param_list\n| emptybody : LBRACE statement_list RBRACEstatement_list : statement_list statement\n| statementstatement : assign\n| condition\n| cycle\n| f_call\n| printassign : ID ASSIGN_SIGN expresion SEMICOLONprint : KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLONprint_items : print_items COMMA print_item\n| print_itemprint_item : expresion\n| CTE_STRINGcycle : KEYWORD_DO body KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLONcondition : KEYWORD_IF LPAREN expresion RPAREN cuadr_if body else_arg SEMICOLONcuadr_if :else_arg : KEYWORD_ELSE cuadr_else bodycuadr_else :else_arg : emptyf_call : ID LPAREN expresion_list_opt RPAREN SEMICOLONexpresion_list_opt : expresion_list\n| emptyexpresion_list : expresion_list COMMA expresion\n| expresionexpresion : exp comparador exp\n| expcomparador : LESS\n| GREATER\n| NOT_EQUAL\n| EQUAL\n| GREATER_EQUAL\n| LESS_EQUALexp : exp OP_SUM termino\n| exp OP_SUB termino\n| terminotermino : termino OP_MUL factor\n| termino OP_DIV factor\n| factorfactor : LPAREN expresion RPAREN\n| OP_SUM varcte\n| OP_SUB varcte\n| varctevarcte : ID\n| CTE_INT\n| CTE_FLOATempty :'
    
_lr_action_items = {'KEYWORD_PROGRAM':([0,],[2,]),'$end':([1,48,],[0,-1,]),'ID':([2,8,13,20,23,24,28,29,30,31,32,33,34,50,51,52,53,55,61,63,65,81,82,83,84,85,86,87,88,89,90,92,93,97,99,101,103,112,116,127,130,],[3,15,17,26,35,39,35,-22,-23,-24,-25,-26,-27,-21,58,58,58,58,58,58,58,-28,58,58,58,-47,-48,-49,-50,-51,-52,58,58,58,58,58,118,-40,-29,-34,-35,]),'SEMICOLON':([3,14,27,43,44,45,46,49,58,59,60,62,64,66,67,68,91,94,96,100,106,107,108,109,110,111,120,121,123,124,126,133,],[4,18,48,-6,-9,-10,-11,-20,-63,81,-46,-55,-58,-62,-64,-65,-60,-61,112,116,-45,-53,-54,-56,-57,-59,-66,127,129,130,-39,-37,]),'KEYWORD_VAR':([4,5,6,7,10,18,80,105,],[8,8,-3,-4,-2,-5,8,8,]),'KEYWORD_VOID':([4,5,6,7,10,18,],[-66,13,-3,-4,-2,-5,]),'KEYWORD_MAIN':([4,5,6,7,9,10,11,12,18,129,],[-66,-66,-3,-4,16,-2,-12,-13,-5,-14,]),'LBRACE':([6,7,10,16,18,37,80,98,105,114,125,131,],[-3,-4,-2,23,-5,23,-66,-36,23,23,-38,23,]),'COMMA':([15,26,44,45,46,58,60,62,64,66,67,68,70,72,75,76,77,78,79,91,94,106,107,108,109,110,111,113,117,128,],[20,20,-9,-10,-11,-63,-46,-55,-58,-62,-64,-65,97,-44,101,-31,-32,-33,103,-60,-61,-45,-53,-54,-56,-57,-59,-43,-30,103,]),'COLON':([15,19,21,26,39,47,118,],[-66,25,-8,-66,56,-7,122,]),'LPAREN':([17,35,36,38,51,52,53,55,65,74,82,83,84,85,86,87,88,89,90,92,93,97,99,101,],[24,52,53,55,65,65,65,65,65,99,65,65,65,-47,-48,-49,-50,-51,-52,65,65,65,65,65,]),'KEYWORD_END':([22,49,],[27,-20,]),'KEYWORD_IF':([23,28,29,30,31,32,33,34,50,81,112,116,127,130,],[36,36,-22,-23,-24,-25,-26,-27,-21,-28,-40,-29,-34,-35,]),'KEYWORD_DO':([23,28,29,30,31,32,33,34,50,81,112,116,127,130,],[37,37,-22,-23,-24,-25,-26,-27,-21,-28,-40,-29,-34,-35,]),'KEYWORD_PRINT':([23,28,29,30,31,32,33,34,50,81,112,116,127,130,],[38,38,-22,-23,-24,-25,-26,-27,-21,-28,-40,-29,-34,-35,]),'RPAREN':([24,40,41,42,44,45,46,52,58,60,62,64,66,67,68,69,70,71,72,73,75,76,77,78,79,91,94,95,102,104,106,107,108,109,110,111,113,115,117,128,132,],[-66,57,-15,-16,-9,-10,-11,-66,-63,-46,-55,-58,-62,-64,-65,96,-41,-42,-44,98,100,-31,-32,-33,-66,-60,-61,111,-17,-19,-45,-53,-54,-56,-57,-59,-43,121,-30,-66,-18,]),'KEYWORD_INT':([25,56,122,],[44,44,44,]),'KEYWORD_FLOAT':([25,56,122,],[45,45,45,]),'KEYWORD_STRING':([25,56,122,],[46,46,46,]),'RBRACE':([28,29,30,31,32,33,34,50,81,112,116,127,130,],[49,-22,-23,-24,-25,-26,-27,-21,-28,-40,-29,-34,-35,]),'ASSIGN_SIGN':([35,],[51,]),'KEYWORD_WHILE':([49,54,],[-20,74,]),'RBRACKET':([49,119,],[-20,123,]),'KEYWORD_ELSE':([49,120,],[-20,125,]),'OP_SUM':([51,52,53,55,58,60,62,64,65,66,67,68,82,83,84,85,86,87,88,89,90,91,92,93,94,97,99,101,106,107,108,109,110,111,],[61,61,61,61,-63,83,-55,-58,61,-62,-64,-65,61,61,61,-47,-48,-49,-50,-51,-52,-60,61,61,-61,61,61,61,83,-53,-54,-56,-57,-59,]),'OP_SUB':([51,52,53,55,58,60,62,64,65,66,67,68,82,83,84,85,86,87,88,89,90,91,92,93,94,97,99,101,106,107,108,109,110,111,],[63,63,63,63,-63,84,-55,-58,63,-62,-64,-65,63,63,63,-47,-48,-49,-50,-51,-52,-60,63,63,-61,63,63,63,84,-53,-54,-56,-57,-59,]),'CTE_INT':([51,52,53,55,61,63,65,82,83,84,85,86,87,88,89,90,92,93,97,99,101,],[67,67,67,67,67,67,67,67,67,67,-47,-48,-49,-50,-51,-52,67,67,67,67,67,]),'CTE_FLOAT':([51,52,53,55,61,63,65,82,83,84,85,86,87,88,89,90,92,93,97,99,101,],[68,68,68,68,68,68,68,68,68,68,-47,-48,-49,-50,-51,-52,68,68,68,68,68,]),'CTE_STRING':([55,101,],[78,78,]),'LBRACKET':([57,],[80,]),'OP_MUL':([58,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,92,-58,-62,-64,-65,-60,-61,92,92,-56,-57,-59,]),'OP_DIV':([58,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,93,-58,-62,-64,-65,-60,-61,93,93,-56,-57,-59,]),'LESS':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,85,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),'GREATER':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,86,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),'NOT_EQUAL':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,87,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),'EQUAL':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,88,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),'GREATER_EQUAL':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,89,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),'LESS_EQUAL':([58,60,62,64,66,67,68,91,94,107,108,109,110,111,],[-63,90,-55,-58,-62,-64,-65,-60,-61,-53,-54,-56,-57,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'vars_opt':([4,80,],[5,105,]),'VARS':([4,5,80,105,],[6,10,6,10,]),'empty':([4,5,15,24,26,52,79,80,120,128,],[7,12,21,42,21,71,104,7,126,104,]),'funcs_opt':([5,],[9,]),'FUNCS':([5,],[11,]),'var_list':([8,],[14,]),'id_list':([15,26,],[19,47,]),'body':([16,37,105,114,131,],[22,54,119,120,133,]),'statement_list':([23,],[28,]),'statement':([23,28,],[29,50,]),'assign':([23,28,],[30,30,]),'condition':([23,28,],[31,31,]),'cycle':([23,28,],[32,32,]),'f_call':([23,28,],[33,33,]),'print':([23,28,],[34,34,]),'parametros_opt':([24,],[40,]),'parametros':([24,],[41,]),'type':([25,56,122,],[43,79,128,]),'expresion':([51,52,53,55,65,97,99,101,],[59,72,73,77,95,113,115,77,]),'exp':([51,52,53,55,65,82,97,99,101,],[60,60,60,60,60,106,60,60,60,]),'termino':([51,52,53,55,65,82,83,84,97,99,101,],[62,62,62,62,62,62,107,108,62,62,62,]),'factor':([51,52,53,55,65,82,83,84,92,93,97,99,101,],[64,64,64,64,64,64,64,64,109,110,64,64,64,]),'varcte':([51,52,53,55,61,63,65,82,83,84,92,93,97,99,101,],[66,66,66,66,91,94,66,66,66,66,66,66,66,66,66,]),'expresion_list_opt':([52,],[69,]),'expresion_list':([52,],[70,]),'print_items':([55,],[75,]),'print_item':([55,101,],[76,117,]),'comparador':([60,],[82,]),'param_list':([79,128,],[102,132,]),'cuadr_if':([98,],[114,]),'else_arg':([120,],[124,]),'cuadr_else':([125,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN body KEYWORD_END SEMICOLON','Programa',9,'p_programa','parser_rules.py',7),
  ('vars_opt -> vars_opt VARS','vars_opt',2,'p_vars_opt','parser_rules.py',11),
  ('vars_opt -> VARS','vars_opt',1,'p_vars_opt','parser_rules.py',12),
  ('vars_opt -> empty','vars_opt',1,'p_vars_opt','parser_rules.py',13),
  ('VARS -> KEYWORD_VAR var_list SEMICOLON','VARS',3,'p_VARS','parser_rules.py',22),
  ('var_list -> ID id_list COLON type','var_list',4,'p_var_list','parser_rules.py',36),
  ('id_list -> COMMA ID id_list','id_list',3,'p_id_list','parser_rules.py',41),
  ('id_list -> empty','id_list',1,'p_id_list','parser_rules.py',42),
  ('type -> KEYWORD_INT','type',1,'p_type','parser_rules.py',49),
  ('type -> KEYWORD_FLOAT','type',1,'p_type','parser_rules.py',50),
  ('type -> KEYWORD_STRING','type',1,'p_type','parser_rules.py',51),
  ('funcs_opt -> FUNCS','funcs_opt',1,'p_funcs_opt','parser_rules.py',55),
  ('funcs_opt -> empty','funcs_opt',1,'p_funcs_opt','parser_rules.py',56),
  ('FUNCS -> KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLON','FUNCS',10,'p_FUNCS','parser_rules.py',63),
  ('parametros_opt -> parametros','parametros_opt',1,'p_parametros_opt','parser_rules.py',98),
  ('parametros_opt -> empty','parametros_opt',1,'p_parametros_opt','parser_rules.py',99),
  ('parametros -> ID COLON type param_list','parametros',4,'p_parametros','parser_rules.py',103),
  ('param_list -> COMMA ID COLON type param_list','param_list',5,'p_param_list','parser_rules.py',107),
  ('param_list -> empty','param_list',1,'p_param_list','parser_rules.py',108),
  ('body -> LBRACE statement_list RBRACE','body',3,'p_body','parser_rules.py',115),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_rules.py',119),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_rules.py',120),
  ('statement -> assign','statement',1,'p_statement','parser_rules.py',127),
  ('statement -> condition','statement',1,'p_statement','parser_rules.py',128),
  ('statement -> cycle','statement',1,'p_statement','parser_rules.py',129),
  ('statement -> f_call','statement',1,'p_statement','parser_rules.py',130),
  ('statement -> print','statement',1,'p_statement','parser_rules.py',131),
  ('assign -> ID ASSIGN_SIGN expresion SEMICOLON','assign',4,'p_assign','parser_rules.py',135),
  ('print -> KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLON','print',5,'p_print','parser_rules.py',157),
  ('print_items -> print_items COMMA print_item','print_items',3,'p_print_items','parser_rules.py',161),
  ('print_items -> print_item','print_items',1,'p_print_items','parser_rules.py',162),
  ('print_item -> expresion','print_item',1,'p_print_item','parser_rules.py',169),
  ('print_item -> CTE_STRING','print_item',1,'p_print_item','parser_rules.py',170),
  ('cycle -> KEYWORD_DO body KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLON','cycle',7,'p_cycle','parser_rules.py',177),
  ('condition -> KEYWORD_IF LPAREN expresion RPAREN cuadr_if body else_arg SEMICOLON','condition',8,'p_condition','parser_rules.py',198),
  ('cuadr_if -> <empty>','cuadr_if',0,'p_cuadr_if','parser_rules.py',211),
  ('else_arg -> KEYWORD_ELSE cuadr_else body','else_arg',3,'p_else_arg','parser_rules.py',221),
  ('cuadr_else -> <empty>','cuadr_else',0,'p_cuadr_else','parser_rules.py',225),
  ('else_arg -> empty','else_arg',1,'p_else_arg_empty','parser_rules.py',244),
  ('f_call -> ID LPAREN expresion_list_opt RPAREN SEMICOLON','f_call',5,'p_f_call','parser_rules.py',256),
  ('expresion_list_opt -> expresion_list','expresion_list_opt',1,'p_expresion_list_opt','parser_rules.py',287),
  ('expresion_list_opt -> empty','expresion_list_opt',1,'p_expresion_list_opt','parser_rules.py',288),
  ('expresion_list -> expresion_list COMMA expresion','expresion_list',3,'p_expresion_list','parser_rules.py',292),
  ('expresion_list -> expresion','expresion_list',1,'p_expresion_list','parser_rules.py',293),
  ('expresion -> exp comparador exp','expresion',3,'p_expresion','parser_rules.py',300),
  ('expresion -> exp','expresion',1,'p_expresion','parser_rules.py',301),
  ('comparador -> LESS','comparador',1,'p_comparador','parser_rules.py',329),
  ('comparador -> GREATER','comparador',1,'p_comparador','parser_rules.py',330),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','parser_rules.py',331),
  ('comparador -> EQUAL','comparador',1,'p_comparador','parser_rules.py',332),
  ('comparador -> GREATER_EQUAL','comparador',1,'p_comparador','parser_rules.py',333),
  ('comparador -> LESS_EQUAL','comparador',1,'p_comparador','parser_rules.py',334),
  ('exp -> exp OP_SUM termino','exp',3,'p_exp','parser_rules.py',338),
  ('exp -> exp OP_SUB termino','exp',3,'p_exp','parser_rules.py',339),
  ('exp -> termino','exp',1,'p_exp','parser_rules.py',340),
  ('termino -> termino OP_MUL factor','termino',3,'p_termino','parser_rules.py',367),
  ('termino -> termino OP_DIV factor','termino',3,'p_termino','parser_rules.py',368),
  ('termino -> factor','termino',1,'p_termino','parser_rules.py',369),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser_rules.py',397),
  ('factor -> OP_SUM varcte','factor',2,'p_factor','parser_rules.py',398),
  ('factor -> OP_SUB varcte','factor',2,'p_factor','parser_rules.py',399),
  ('factor -> varcte','factor',1,'p_factor','parser_rules.py',400),
  ('varcte -> ID','varcte',1,'p_varcte','parser_rules.py',409),
  ('varcte -> CTE_INT','varcte',1,'p_varcte','parser_rules.py',410),
  ('varcte -> CTE_FLOAT','varcte',1,'p_varcte','parser_rules.py',411),
  ('empty -> <empty>','empty',0,'p_empty','parser_rules.py',434),
]
