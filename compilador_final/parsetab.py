
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN_SIGN COLON COMMA CTE_FLOAT CTE_INT CTE_STRING EQUAL GREATER GREATER_EQUAL ID KEYWORD_DO KEYWORD_ELSE KEYWORD_END KEYWORD_FLOAT KEYWORD_IF KEYWORD_INT KEYWORD_MAIN KEYWORD_PRINT KEYWORD_PROGRAM KEYWORD_STRING KEYWORD_VAR KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LESS LESS_EQUAL LPAREN NOT_EQUAL OP_DIV OP_MUL OP_SUB OP_SUM RBRACE RBRACKET RPAREN SEMICOLONPrograma : KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN LBRACE body RBRACE KEYWORD_END SEMICOLONvars_opt : vars_opt VARS\n| VARS\n| emptyVARS : KEYWORD_VAR var_list SEMICOLONvar_list : ID id_list COLON typeid_list : COMMA ID id_list\n| emptytype : KEYWORD_INT\n| KEYWORD_FLOAT\n| KEYWORD_STRINGfuncs_opt : funcs_opt FUNCS\n| FUNCS\n| emptyFUNCS : KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLONparametros_opt : parametros\n| emptyparametros : ID COLON type param_listparam_list : COMMA ID COLON type param_list\n| emptybody : statement_liststatement_list : statement statement_list\n| statement\n| emptystatement : assign\n| condition\n| cycle\n| f_call\n| printassign : ID ASSIGN_SIGN expresion SEMICOLONprint : KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLONprint_items : print_items COMMA print_item\n| print_itemprint_item : expresion\n| CTE_STRINGcycle : KEYWORD_DO LBRACE body RBRACE KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLONcondition : KEYWORD_IF LPAREN expresion RPAREN cuadr_if LBRACE body RBRACE else_arg SEMICOLONcuadr_if :else_arg : KEYWORD_ELSE cuadr_else LBRACE body RBRACEcuadr_else :else_arg : emptyf_call : ID LPAREN expresion_list_opt RPAREN SEMICOLONexpresion_list_opt : expresion_list\n| emptyexpresion_list : expresion_list COMMA expresion\n| expresionexpresion : exp comparador exp\n| expcomparador : LESS\n| GREATER\n| NOT_EQUAL\n| EQUAL\n| GREATER_EQUAL\n| LESS_EQUALexp : exp OP_SUM termino\n| exp OP_SUB termino\n| terminotermino : termino OP_MUL factor\n| termino OP_DIV factor\n| factorfactor : LPAREN expresion RPAREN\n| OP_SUM varcte\n| OP_SUB varcte\n| varctevarcte : ID\n| CTE_INT\n| CTE_FLOATempty :'
    
_lr_action_items = {'KEYWORD_PROGRAM':([0,],[2,]),'$end':([1,99,],[0,-1,]),'ID':([2,6,7,8,10,13,19,21,23,24,30,32,33,34,35,36,49,50,53,54,55,61,63,65,81,82,83,84,85,86,87,88,89,90,91,93,94,98,103,105,107,114,118,122,123,136,137,139,],[3,-3,-4,15,-2,18,-5,26,27,40,27,-25,-26,-27,-28,-29,58,58,58,27,58,58,58,58,-68,-30,58,58,58,-49,-50,-51,-52,-53,-54,58,58,58,58,120,27,-42,-31,27,58,-36,-37,27,]),'SEMICOLON':([3,14,44,45,46,47,58,59,60,62,64,66,67,68,73,92,95,97,102,108,109,110,111,112,113,125,130,131,133,135,141,],[4,19,-6,-9,-10,-11,-65,82,-48,-57,-60,-64,-66,-67,99,-62,-63,114,118,-47,-55,-56,-58,-59,-61,129,-68,136,137,-41,-39,]),'KEYWORD_VAR':([4,5,6,7,10,19,81,107,],[8,8,-3,-4,-2,-5,8,8,]),'KEYWORD_VOID':([4,5,6,7,9,10,11,12,17,19,129,],[-68,13,-3,-4,13,-2,-13,-14,-12,-5,-15,]),'KEYWORD_MAIN':([4,5,6,7,9,10,11,12,17,19,129,],[-68,-68,-3,-4,16,-2,-13,-14,-12,-5,-15,]),'KEYWORD_IF':([6,7,10,19,23,30,32,33,34,35,36,54,81,82,107,114,118,122,136,137,139,],[-3,-4,-2,-5,37,37,-25,-26,-27,-28,-29,37,-68,-30,37,-42,-31,37,-36,-37,37,]),'KEYWORD_DO':([6,7,10,19,23,30,32,33,34,35,36,54,81,82,107,114,118,122,136,137,139,],[-3,-4,-2,-5,38,38,-25,-26,-27,-28,-29,38,-68,-30,38,-42,-31,38,-36,-37,38,]),'KEYWORD_PRINT':([6,7,10,19,23,30,32,33,34,35,36,54,81,82,107,114,118,122,136,137,139,],[-3,-4,-2,-5,39,39,-25,-26,-27,-28,-29,39,-68,-30,39,-42,-31,39,-36,-37,39,]),'RBRACKET':([6,7,10,19,29,30,31,32,33,34,35,36,52,81,82,107,114,118,121,136,137,],[-3,-4,-2,-5,-21,-23,-24,-25,-26,-27,-28,-29,-22,-68,-30,-68,-42,-31,125,-36,-37,]),'COMMA':([15,26,45,46,47,58,60,62,64,66,67,68,70,72,76,77,78,79,80,92,95,108,109,110,111,112,113,115,119,128,],[21,21,-9,-10,-11,-65,-48,-57,-60,-64,-66,-67,98,-46,103,-33,-34,-35,105,-62,-63,-47,-55,-56,-58,-59,-61,-45,-32,105,]),'COLON':([15,20,22,26,40,48,120,],[-68,25,-8,-68,56,-7,124,]),'LBRACE':([16,38,100,116,134,138,],[23,54,-38,122,-40,139,]),'LPAREN':([18,27,37,39,49,50,53,55,65,83,84,85,86,87,88,89,90,91,93,94,98,103,117,123,],[24,50,53,55,65,65,65,65,65,65,65,65,-49,-50,-51,-52,-53,-54,65,65,65,65,123,65,]),'RBRACE':([23,28,29,30,31,32,33,34,35,36,52,54,75,82,114,118,122,126,136,137,139,140,],[-68,51,-21,-23,-24,-25,-26,-27,-28,-29,-22,-68,101,-30,-42,-31,-68,130,-36,-37,-68,141,]),'RPAREN':([24,41,42,43,45,46,47,50,58,60,62,64,66,67,68,69,70,71,72,74,76,77,78,79,80,92,95,96,104,106,108,109,110,111,112,113,115,119,127,128,132,],[-68,57,-16,-17,-9,-10,-11,-68,-65,-48,-57,-60,-64,-66,-67,97,-43,-44,-46,100,102,-33,-34,-35,-68,-62,-63,113,-18,-20,-47,-55,-56,-58,-59,-61,-45,-32,131,-68,-19,]),'KEYWORD_INT':([25,56,124,],[45,45,45,]),'KEYWORD_FLOAT':([25,56,124,],[46,46,46,]),'KEYWORD_STRING':([25,56,124,],[47,47,47,]),'ASSIGN_SIGN':([27,],[49,]),'OP_SUM':([49,50,53,55,58,60,62,64,65,66,67,68,83,84,85,86,87,88,89,90,91,92,93,94,95,98,103,108,109,110,111,112,113,123,],[61,61,61,61,-65,84,-57,-60,61,-64,-66,-67,61,61,61,-49,-50,-51,-52,-53,-54,-62,61,61,-63,61,61,84,-55,-56,-58,-59,-61,61,]),'OP_SUB':([49,50,53,55,58,60,62,64,65,66,67,68,83,84,85,86,87,88,89,90,91,92,93,94,95,98,103,108,109,110,111,112,113,123,],[63,63,63,63,-65,85,-57,-60,63,-64,-66,-67,63,63,63,-49,-50,-51,-52,-53,-54,-62,63,63,-63,63,63,85,-55,-56,-58,-59,-61,63,]),'CTE_INT':([49,50,53,55,61,63,65,83,84,85,86,87,88,89,90,91,93,94,98,103,123,],[67,67,67,67,67,67,67,67,67,67,-49,-50,-51,-52,-53,-54,67,67,67,67,67,]),'CTE_FLOAT':([49,50,53,55,61,63,65,83,84,85,86,87,88,89,90,91,93,94,98,103,123,],[68,68,68,68,68,68,68,68,68,68,-49,-50,-51,-52,-53,-54,68,68,68,68,68,]),'KEYWORD_END':([51,],[73,]),'CTE_STRING':([55,103,],[79,79,]),'LBRACKET':([57,],[81,]),'OP_MUL':([58,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,93,-60,-64,-66,-67,-62,-63,93,93,-58,-59,-61,]),'OP_DIV':([58,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,94,-60,-64,-66,-67,-62,-63,94,94,-58,-59,-61,]),'LESS':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,86,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'GREATER':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,87,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'NOT_EQUAL':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,88,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'EQUAL':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,89,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'GREATER_EQUAL':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,90,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'LESS_EQUAL':([58,60,62,64,66,67,68,92,95,109,110,111,112,113,],[-65,91,-57,-60,-64,-66,-67,-62,-63,-55,-56,-58,-59,-61,]),'KEYWORD_WHILE':([101,],[117,]),'KEYWORD_ELSE':([130,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'vars_opt':([4,81,],[5,107,]),'VARS':([4,5,81,107,],[6,10,6,10,]),'empty':([4,5,15,23,24,26,30,50,54,80,81,107,122,128,130,139,],[7,12,22,31,43,22,31,71,31,106,7,31,31,106,135,31,]),'funcs_opt':([5,],[9,]),'FUNCS':([5,9,],[11,17,]),'var_list':([8,],[14,]),'id_list':([15,26,],[20,48,]),'body':([23,54,107,122,139,],[28,75,121,126,140,]),'statement_list':([23,30,54,107,122,139,],[29,52,29,29,29,29,]),'statement':([23,30,54,107,122,139,],[30,30,30,30,30,30,]),'assign':([23,30,54,107,122,139,],[32,32,32,32,32,32,]),'condition':([23,30,54,107,122,139,],[33,33,33,33,33,33,]),'cycle':([23,30,54,107,122,139,],[34,34,34,34,34,34,]),'f_call':([23,30,54,107,122,139,],[35,35,35,35,35,35,]),'print':([23,30,54,107,122,139,],[36,36,36,36,36,36,]),'parametros_opt':([24,],[41,]),'parametros':([24,],[42,]),'type':([25,56,124,],[44,80,128,]),'expresion':([49,50,53,55,65,98,103,123,],[59,72,74,78,96,115,78,127,]),'exp':([49,50,53,55,65,83,98,103,123,],[60,60,60,60,60,108,60,60,60,]),'termino':([49,50,53,55,65,83,84,85,98,103,123,],[62,62,62,62,62,62,109,110,62,62,62,]),'factor':([49,50,53,55,65,83,84,85,93,94,98,103,123,],[64,64,64,64,64,64,64,64,111,112,64,64,64,]),'varcte':([49,50,53,55,61,63,65,83,84,85,93,94,98,103,123,],[66,66,66,66,92,95,66,66,66,66,66,66,66,66,66,]),'expresion_list_opt':([50,],[69,]),'expresion_list':([50,],[70,]),'print_items':([55,],[76,]),'print_item':([55,103,],[77,119,]),'comparador':([60,],[83,]),'param_list':([80,128,],[104,132,]),'cuadr_if':([100,],[116,]),'else_arg':([130,],[133,]),'cuadr_else':([134,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN LBRACE body RBRACE KEYWORD_END SEMICOLON','Programa',11,'p_programa','parser_rules.py',7),
  ('vars_opt -> vars_opt VARS','vars_opt',2,'p_vars_opt','parser_rules.py',11),
  ('vars_opt -> VARS','vars_opt',1,'p_vars_opt','parser_rules.py',12),
  ('vars_opt -> empty','vars_opt',1,'p_vars_opt','parser_rules.py',13),
  ('VARS -> KEYWORD_VAR var_list SEMICOLON','VARS',3,'p_VARS','parser_rules.py',22),
  ('var_list -> ID id_list COLON type','var_list',4,'p_var_list','parser_rules.py',36),
  ('id_list -> COMMA ID id_list','id_list',3,'p_id_list','parser_rules.py',41),
  ('id_list -> empty','id_list',1,'p_id_list','parser_rules.py',42),
  ('type -> KEYWORD_INT','type',1,'p_type','parser_rules.py',49),
  ('type -> KEYWORD_FLOAT','type',1,'p_type','parser_rules.py',50),
  ('type -> KEYWORD_STRING','type',1,'p_type','parser_rules.py',51),
  ('funcs_opt -> funcs_opt FUNCS','funcs_opt',2,'p_funcs_opt','parser_rules.py',55),
  ('funcs_opt -> FUNCS','funcs_opt',1,'p_funcs_opt','parser_rules.py',56),
  ('funcs_opt -> empty','funcs_opt',1,'p_funcs_opt','parser_rules.py',57),
  ('FUNCS -> KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLON','FUNCS',10,'p_FUNCS','parser_rules.py',64),
  ('parametros_opt -> parametros','parametros_opt',1,'p_parametros_opt','parser_rules.py',78),
  ('parametros_opt -> empty','parametros_opt',1,'p_parametros_opt','parser_rules.py',79),
  ('parametros -> ID COLON type param_list','parametros',4,'p_parametros','parser_rules.py',83),
  ('param_list -> COMMA ID COLON type param_list','param_list',5,'p_param_list','parser_rules.py',87),
  ('param_list -> empty','param_list',1,'p_param_list','parser_rules.py',88),
  ('body -> statement_list','body',1,'p_body','parser_rules.py',95),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser_rules.py',99),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_rules.py',100),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser_rules.py',101),
  ('statement -> assign','statement',1,'p_statement','parser_rules.py',112),
  ('statement -> condition','statement',1,'p_statement','parser_rules.py',113),
  ('statement -> cycle','statement',1,'p_statement','parser_rules.py',114),
  ('statement -> f_call','statement',1,'p_statement','parser_rules.py',115),
  ('statement -> print','statement',1,'p_statement','parser_rules.py',116),
  ('assign -> ID ASSIGN_SIGN expresion SEMICOLON','assign',4,'p_assign','parser_rules.py',120),
  ('print -> KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLON','print',5,'p_print','parser_rules.py',142),
  ('print_items -> print_items COMMA print_item','print_items',3,'p_print_items','parser_rules.py',146),
  ('print_items -> print_item','print_items',1,'p_print_items','parser_rules.py',147),
  ('print_item -> expresion','print_item',1,'p_print_item','parser_rules.py',154),
  ('print_item -> CTE_STRING','print_item',1,'p_print_item','parser_rules.py',155),
  ('cycle -> KEYWORD_DO LBRACE body RBRACE KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLON','cycle',9,'p_cycle','parser_rules.py',162),
  ('condition -> KEYWORD_IF LPAREN expresion RPAREN cuadr_if LBRACE body RBRACE else_arg SEMICOLON','condition',10,'p_condition','parser_rules.py',183),
  ('cuadr_if -> <empty>','cuadr_if',0,'p_cuadr_if','parser_rules.py',196),
  ('else_arg -> KEYWORD_ELSE cuadr_else LBRACE body RBRACE','else_arg',5,'p_else_arg','parser_rules.py',206),
  ('cuadr_else -> <empty>','cuadr_else',0,'p_cuadr_else','parser_rules.py',210),
  ('else_arg -> empty','else_arg',1,'p_else_arg_empty','parser_rules.py',229),
  ('f_call -> ID LPAREN expresion_list_opt RPAREN SEMICOLON','f_call',5,'p_f_call','parser_rules.py',241),
  ('expresion_list_opt -> expresion_list','expresion_list_opt',1,'p_expresion_list_opt','parser_rules.py',272),
  ('expresion_list_opt -> empty','expresion_list_opt',1,'p_expresion_list_opt','parser_rules.py',273),
  ('expresion_list -> expresion_list COMMA expresion','expresion_list',3,'p_expresion_list','parser_rules.py',277),
  ('expresion_list -> expresion','expresion_list',1,'p_expresion_list','parser_rules.py',278),
  ('expresion -> exp comparador exp','expresion',3,'p_expresion','parser_rules.py',285),
  ('expresion -> exp','expresion',1,'p_expresion','parser_rules.py',286),
  ('comparador -> LESS','comparador',1,'p_comparador','parser_rules.py',314),
  ('comparador -> GREATER','comparador',1,'p_comparador','parser_rules.py',315),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','parser_rules.py',316),
  ('comparador -> EQUAL','comparador',1,'p_comparador','parser_rules.py',317),
  ('comparador -> GREATER_EQUAL','comparador',1,'p_comparador','parser_rules.py',318),
  ('comparador -> LESS_EQUAL','comparador',1,'p_comparador','parser_rules.py',319),
  ('exp -> exp OP_SUM termino','exp',3,'p_exp','parser_rules.py',323),
  ('exp -> exp OP_SUB termino','exp',3,'p_exp','parser_rules.py',324),
  ('exp -> termino','exp',1,'p_exp','parser_rules.py',325),
  ('termino -> termino OP_MUL factor','termino',3,'p_termino','parser_rules.py',352),
  ('termino -> termino OP_DIV factor','termino',3,'p_termino','parser_rules.py',353),
  ('termino -> factor','termino',1,'p_termino','parser_rules.py',354),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser_rules.py',382),
  ('factor -> OP_SUM varcte','factor',2,'p_factor','parser_rules.py',383),
  ('factor -> OP_SUB varcte','factor',2,'p_factor','parser_rules.py',384),
  ('factor -> varcte','factor',1,'p_factor','parser_rules.py',385),
  ('varcte -> ID','varcte',1,'p_varcte','parser_rules.py',394),
  ('varcte -> CTE_INT','varcte',1,'p_varcte','parser_rules.py',395),
  ('varcte -> CTE_FLOAT','varcte',1,'p_varcte','parser_rules.py',396),
  ('empty -> <empty>','empty',0,'p_empty','parser_rules.py',419),
]
