
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN_SIGN COLON COMMA CTE_FLOAT CTE_INT CTE_STRING EQUAL GREATER GREATER_EQUAL ID KEYWORD_DO KEYWORD_ELSE KEYWORD_END KEYWORD_FLOAT KEYWORD_IF KEYWORD_INT KEYWORD_MAIN KEYWORD_PRINT KEYWORD_PROGRAM KEYWORD_STRING KEYWORD_VAR KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LESS LESS_EQUAL LPAREN NOT_EQUAL OP_DIV OP_MUL OP_SUB OP_SUM RBRACE RBRACKET RPAREN SEMICOLONPrograma : KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN body KEYWORD_END SEMICOLONvars_opt : vars_opt VARS\n| emptyVARS : KEYWORD_VAR var_list SEMICOLONvar_list : ID id_list COLON typeid_list : COMMA ID id_list\n| emptytype : KEYWORD_INT\n| KEYWORD_FLOAT\n| KEYWORD_STRINGfuncs_opt : FUNCS\n| emptyFUNCS : KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLONparametros_opt : parametros\n| emptyparametros : ID COLON type param_listparam_list : COMMA ID COLON type param_list\n| emptybody : LBRACE statement_list RBRACEstatement_list : statement_list statement\n| statementstatement : assign\n| condition\n| cycle\n| f_call\n| printassign : ID ASSIGN_SIGN expresion SEMICOLONprint : KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLONprint_items : print_items COMMA print_item\n| print_itemprint_item : expresion\n| CTE_STRINGcycle : KEYWORD_DO body KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLONcondition : KEYWORD_IF LPAREN expresion RPAREN body else_opt SEMICOLONelse_opt : KEYWORD_ELSE body\n| emptyf_call : ID LPAREN expresion_list_opt RPAREN SEMICOLONexpresion_list_opt : expresion_list\n| emptyexpresion_list : expresion_list COMMA expresion\n| expresionexpresion : exp comparador exp\n| expcomparador : LESS\n| GREATER\n| NOT_EQUAL\n| EQUAL\n| GREATER_EQUAL\n| LESS_EQUALexp : exp OP_SUM termino\n| exp OP_SUB termino\n| terminotermino : termino OP_MUL factor\n| termino OP_DIV factor\n| factorfactor : LPAREN expresion RPAREN\n| OP_SUM varcte\n| OP_SUB varcte\n| varctevarcte : ID\n| CTE_INT\n| CTE_FLOATempty :'
    
_lr_action_items = {'KEYWORD_PROGRAM':([0,],[2,]),'$end':([1,42,],[0,-1,]),'ID':([2,11,12,18,21,23,25,26,27,28,29,30,31,44,45,46,47,49,60,62,64,80,81,82,83,84,85,86,87,88,89,91,92,96,98,100,102,111,115,125,127,],[3,15,16,32,37,38,32,-21,-22,-23,-24,-25,-26,-20,57,57,57,57,57,57,57,-27,57,57,57,-44,-45,-46,-47,-48,-49,57,57,57,57,57,117,-37,-28,-34,-33,]),'SEMICOLON':([3,14,24,43,50,51,52,53,57,58,59,61,63,65,66,67,90,93,95,99,105,106,107,108,109,110,113,119,121,122,124,126,],[4,19,42,-19,-5,-8,-9,-10,-60,80,-43,-52,-55,-59,-61,-62,-57,-58,111,115,-42,-50,-51,-53,-54,-56,-63,125,-36,127,129,-35,]),'KEYWORD_VAR':([4,5,6,8,19,79,104,],[-63,11,-3,-2,-4,-63,11,]),'KEYWORD_VOID':([4,5,6,8,19,],[-63,12,-3,-2,-4,]),'KEYWORD_MAIN':([4,5,6,7,8,9,10,19,129,],[-63,-63,-3,13,-2,-11,-12,-4,-13,]),'LBRACE':([6,8,13,19,34,79,97,104,120,],[-3,-2,18,-4,18,-63,18,18,18,]),'COMMA':([15,37,51,52,53,57,59,61,63,65,66,67,69,71,74,75,76,77,78,90,93,105,106,107,108,109,110,112,116,128,],[21,21,-8,-9,-10,-60,-43,-52,-55,-59,-61,-62,96,-41,100,-30,-31,-32,102,-57,-58,-42,-50,-51,-53,-54,-56,-40,-29,102,]),'COLON':([15,20,22,37,38,54,117,],[-63,36,-7,-63,55,-6,123,]),'LPAREN':([16,32,33,35,45,46,47,49,64,73,81,82,83,84,85,86,87,88,89,91,92,96,98,100,],[23,46,47,49,64,64,64,64,64,98,64,64,64,-44,-45,-46,-47,-48,-49,64,64,64,64,64,]),'KEYWORD_END':([17,43,],[24,-19,]),'KEYWORD_IF':([18,25,26,27,28,29,30,31,44,80,111,115,125,127,],[33,33,-21,-22,-23,-24,-25,-26,-20,-27,-37,-28,-34,-33,]),'KEYWORD_DO':([18,25,26,27,28,29,30,31,44,80,111,115,125,127,],[34,34,-21,-22,-23,-24,-25,-26,-20,-27,-37,-28,-34,-33,]),'KEYWORD_PRINT':([18,25,26,27,28,29,30,31,44,80,111,115,125,127,],[35,35,-21,-22,-23,-24,-25,-26,-20,-27,-37,-28,-34,-33,]),'RPAREN':([23,39,40,41,46,51,52,53,57,59,61,63,65,66,67,68,69,70,71,72,74,75,76,77,78,90,93,94,101,103,105,106,107,108,109,110,112,114,116,128,130,],[-63,56,-14,-15,-63,-8,-9,-10,-60,-43,-52,-55,-59,-61,-62,95,-38,-39,-41,97,99,-30,-31,-32,-63,-57,-58,110,-16,-18,-42,-50,-51,-53,-54,-56,-40,122,-29,-63,-17,]),'RBRACE':([25,26,27,28,29,30,31,44,80,111,115,125,127,],[43,-21,-22,-23,-24,-25,-26,-20,-27,-37,-28,-34,-33,]),'ASSIGN_SIGN':([32,],[45,]),'KEYWORD_INT':([36,55,123,],[51,51,51,]),'KEYWORD_FLOAT':([36,55,123,],[52,52,52,]),'KEYWORD_STRING':([36,55,123,],[53,53,53,]),'KEYWORD_WHILE':([43,48,],[-19,73,]),'KEYWORD_ELSE':([43,113,],[-19,120,]),'RBRACKET':([43,118,],[-19,124,]),'OP_SUM':([45,46,47,49,57,59,61,63,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,96,98,100,105,106,107,108,109,110,],[60,60,60,60,-60,82,-52,-55,60,-59,-61,-62,60,60,60,-44,-45,-46,-47,-48,-49,-57,60,60,-58,60,60,60,82,-50,-51,-53,-54,-56,]),'OP_SUB':([45,46,47,49,57,59,61,63,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,96,98,100,105,106,107,108,109,110,],[62,62,62,62,-60,83,-52,-55,62,-59,-61,-62,62,62,62,-44,-45,-46,-47,-48,-49,-57,62,62,-58,62,62,62,83,-50,-51,-53,-54,-56,]),'CTE_INT':([45,46,47,49,60,62,64,81,82,83,84,85,86,87,88,89,91,92,96,98,100,],[66,66,66,66,66,66,66,66,66,66,-44,-45,-46,-47,-48,-49,66,66,66,66,66,]),'CTE_FLOAT':([45,46,47,49,60,62,64,81,82,83,84,85,86,87,88,89,91,92,96,98,100,],[67,67,67,67,67,67,67,67,67,67,-44,-45,-46,-47,-48,-49,67,67,67,67,67,]),'CTE_STRING':([49,100,],[77,77,]),'LBRACKET':([56,],[79,]),'OP_MUL':([57,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,91,-55,-59,-61,-62,-57,-58,91,91,-53,-54,-56,]),'OP_DIV':([57,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,92,-55,-59,-61,-62,-57,-58,92,92,-53,-54,-56,]),'LESS':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,84,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),'GREATER':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,85,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),'NOT_EQUAL':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,86,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),'EQUAL':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,87,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),'GREATER_EQUAL':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,88,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),'LESS_EQUAL':([57,59,61,63,65,66,67,90,93,106,107,108,109,110,],[-60,89,-52,-55,-59,-61,-62,-57,-58,-50,-51,-53,-54,-56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'vars_opt':([4,79,],[5,104,]),'empty':([4,5,15,23,37,46,78,79,113,128,],[6,10,22,41,22,70,103,6,121,103,]),'funcs_opt':([5,],[7,]),'VARS':([5,104,],[8,8,]),'FUNCS':([5,],[9,]),'var_list':([11,],[14,]),'body':([13,34,97,104,120,],[17,48,113,118,126,]),'id_list':([15,37,],[20,54,]),'statement_list':([18,],[25,]),'statement':([18,25,],[26,44,]),'assign':([18,25,],[27,27,]),'condition':([18,25,],[28,28,]),'cycle':([18,25,],[29,29,]),'f_call':([18,25,],[30,30,]),'print':([18,25,],[31,31,]),'parametros_opt':([23,],[39,]),'parametros':([23,],[40,]),'type':([36,55,123,],[50,78,128,]),'expresion':([45,46,47,49,64,96,98,100,],[58,71,72,76,94,112,114,76,]),'exp':([45,46,47,49,64,81,96,98,100,],[59,59,59,59,59,105,59,59,59,]),'termino':([45,46,47,49,64,81,82,83,96,98,100,],[61,61,61,61,61,61,106,107,61,61,61,]),'factor':([45,46,47,49,64,81,82,83,91,92,96,98,100,],[63,63,63,63,63,63,63,63,108,109,63,63,63,]),'varcte':([45,46,47,49,60,62,64,81,82,83,91,92,96,98,100,],[65,65,65,65,90,93,65,65,65,65,65,65,65,65,65,]),'expresion_list_opt':([46,],[68,]),'expresion_list':([46,],[69,]),'print_items':([49,],[74,]),'print_item':([49,100,],[75,116,]),'comparador':([59,],[81,]),'param_list':([78,128,],[101,130,]),'else_opt':([113,],[119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> KEYWORD_PROGRAM ID SEMICOLON vars_opt funcs_opt KEYWORD_MAIN body KEYWORD_END SEMICOLON','Programa',9,'p_programa','parser.py',146),
  ('vars_opt -> vars_opt VARS','vars_opt',2,'p_vars_opt','parser.py',150),
  ('vars_opt -> empty','vars_opt',1,'p_vars_opt','parser.py',151),
  ('VARS -> KEYWORD_VAR var_list SEMICOLON','VARS',3,'p_VARS','parser.py',158),
  ('var_list -> ID id_list COLON type','var_list',4,'p_var_list','parser.py',162),
  ('id_list -> COMMA ID id_list','id_list',3,'p_id_list','parser.py',167),
  ('id_list -> empty','id_list',1,'p_id_list','parser.py',168),
  ('type -> KEYWORD_INT','type',1,'p_type','parser.py',175),
  ('type -> KEYWORD_FLOAT','type',1,'p_type','parser.py',176),
  ('type -> KEYWORD_STRING','type',1,'p_type','parser.py',177),
  ('funcs_opt -> FUNCS','funcs_opt',1,'p_funcs_opt','parser.py',181),
  ('funcs_opt -> empty','funcs_opt',1,'p_funcs_opt','parser.py',182),
  ('FUNCS -> KEYWORD_VOID ID LPAREN parametros_opt RPAREN LBRACKET vars_opt body RBRACKET SEMICOLON','FUNCS',10,'p_FUNCS','parser.py',186),
  ('parametros_opt -> parametros','parametros_opt',1,'p_parametros_opt','parser.py',190),
  ('parametros_opt -> empty','parametros_opt',1,'p_parametros_opt','parser.py',191),
  ('parametros -> ID COLON type param_list','parametros',4,'p_parametros','parser.py',195),
  ('param_list -> COMMA ID COLON type param_list','param_list',5,'p_param_list','parser.py',199),
  ('param_list -> empty','param_list',1,'p_param_list','parser.py',200),
  ('body -> LBRACE statement_list RBRACE','body',3,'p_body','parser.py',207),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',211),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',212),
  ('statement -> assign','statement',1,'p_statement','parser.py',219),
  ('statement -> condition','statement',1,'p_statement','parser.py',220),
  ('statement -> cycle','statement',1,'p_statement','parser.py',221),
  ('statement -> f_call','statement',1,'p_statement','parser.py',222),
  ('statement -> print','statement',1,'p_statement','parser.py',223),
  ('assign -> ID ASSIGN_SIGN expresion SEMICOLON','assign',4,'p_assign','parser.py',227),
  ('print -> KEYWORD_PRINT LPAREN print_items RPAREN SEMICOLON','print',5,'p_print','parser.py',231),
  ('print_items -> print_items COMMA print_item','print_items',3,'p_print_items','parser.py',235),
  ('print_items -> print_item','print_items',1,'p_print_items','parser.py',236),
  ('print_item -> expresion','print_item',1,'p_print_item','parser.py',243),
  ('print_item -> CTE_STRING','print_item',1,'p_print_item','parser.py',244),
  ('cycle -> KEYWORD_DO body KEYWORD_WHILE LPAREN expresion RPAREN SEMICOLON','cycle',7,'p_cycle','parser.py',251),
  ('condition -> KEYWORD_IF LPAREN expresion RPAREN body else_opt SEMICOLON','condition',7,'p_condition','parser.py',255),
  ('else_opt -> KEYWORD_ELSE body','else_opt',2,'p_else_opt','parser.py',259),
  ('else_opt -> empty','else_opt',1,'p_else_opt','parser.py',260),
  ('f_call -> ID LPAREN expresion_list_opt RPAREN SEMICOLON','f_call',5,'p_f_call','parser.py',267),
  ('expresion_list_opt -> expresion_list','expresion_list_opt',1,'p_expresion_list_opt','parser.py',271),
  ('expresion_list_opt -> empty','expresion_list_opt',1,'p_expresion_list_opt','parser.py',272),
  ('expresion_list -> expresion_list COMMA expresion','expresion_list',3,'p_expresion_list','parser.py',276),
  ('expresion_list -> expresion','expresion_list',1,'p_expresion_list','parser.py',277),
  ('expresion -> exp comparador exp','expresion',3,'p_expresion','parser.py',284),
  ('expresion -> exp','expresion',1,'p_expresion','parser.py',285),
  ('comparador -> LESS','comparador',1,'p_comparador','parser.py',292),
  ('comparador -> GREATER','comparador',1,'p_comparador','parser.py',293),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','parser.py',294),
  ('comparador -> EQUAL','comparador',1,'p_comparador','parser.py',295),
  ('comparador -> GREATER_EQUAL','comparador',1,'p_comparador','parser.py',296),
  ('comparador -> LESS_EQUAL','comparador',1,'p_comparador','parser.py',297),
  ('exp -> exp OP_SUM termino','exp',3,'p_exp','parser.py',301),
  ('exp -> exp OP_SUB termino','exp',3,'p_exp','parser.py',302),
  ('exp -> termino','exp',1,'p_exp','parser.py',303),
  ('termino -> termino OP_MUL factor','termino',3,'p_termino','parser.py',310),
  ('termino -> termino OP_DIV factor','termino',3,'p_termino','parser.py',311),
  ('termino -> factor','termino',1,'p_termino','parser.py',312),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',319),
  ('factor -> OP_SUM varcte','factor',2,'p_factor','parser.py',320),
  ('factor -> OP_SUB varcte','factor',2,'p_factor','parser.py',321),
  ('factor -> varcte','factor',1,'p_factor','parser.py',322),
  ('varcte -> ID','varcte',1,'p_varcte','parser.py',331),
  ('varcte -> CTE_INT','varcte',1,'p_varcte','parser.py',332),
  ('varcte -> CTE_FLOAT','varcte',1,'p_varcte','parser.py',333),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',337),
]
